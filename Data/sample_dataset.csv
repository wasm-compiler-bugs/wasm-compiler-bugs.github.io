ID,URL,Language,Bug Inducing Input Location,Purpose,Tested API,Root Cause,Root Cause Category,Root Cause SubCategory,Bug Fix
52858,Atomics are miscompiled in wasm backend · Issue #10654 · emscripten-core/emscripten · GitHub,C++,https://github.com/emscripten-core/emscripten/issues/10654#issue-576985606,Threading,emscripten_atomic_exchange_u8,Incorrect variable types/casting,Data Type Incompatibilities,Compiler Casting,Fix incorrect variable type
53006,Add missing removeEventListener extern. by Faless · Pull Request #10506 · emscripten-core/emscripten · GitHub,C++,https://github.com/emscripten-core/emscripten/pull/10506#issue-377273583,HTML5,"emscripten_enter_soft_fullscreen, emscripten_exit_soft_fullscreen",Missing function definition,Missing Symbol,,Add function
53127,"error ""variable FS is undeclared"" in 1.39.7 with closure compiler, NO_FILESYSTEM · Issue #10385 · emscripten-core/emscripten · GitHub",C,Test case for emscripten stray syscall issue · GitHub,Filesystem,"__syscall3, FS.read",Bad function definition in external component,Missing Symbol,,Replace FS object in syscalls with assertions when FS is disabled
53516,errno.h constants regression (wasi types vs preprocessor) · Issue #9996 · emscripten-core/emscripten · GitHub,C,https://github.com/emscripten-core/emscripten/issues/9996#issue-535398034,Exception Handling,"EPERM, __WASI_ERRNO_PERM, DAV1D_ERR",Incorrect variable types/casting,Data Type Incompatibilities,Compiler Casting,Change variable type used
53611,Function Pointers and dynamic linking (function signature mismatch) · Issue #9901 · emscripten-core/emscripten · GitHub,C++,https://github.com/emscripten-core/emscripten/issues/9901#issue-528903620,"Dynamic Pointers, Function Signature Types","EMSCRIPTEN_KEEPALIVE, Module.dynamicLibraries",Inconsistent function names with prior compiler versions,Missing Symbol,,Add missing function name lookup
53662,Indirect call signature mismatch with MAIN_MODULE=1 · Issue #9850 · emscripten-core/emscripten · GitHub,C++,https://github.com/emscripten-core/emscripten/issues/9850#issue-523926945,Indirect Calls,"typedef, long long",Type of value returned from Wasm to JS,Data Type Incompatibilities ,Legalization,Fix i64 value legalization
53877,Standalone programs without main are broken · Issue #9635 · emscripten-core/emscripten · GitHub,C++,https://github.com/emscripten-core/emscripten/issues/9635#issue-506239249,Program-Level Features,No main(),"Main function not required, but symbol is exported",Emit Unneeded Symbol,,Make 'main' symbol export optional
53950,-s MAIN_MODULE=1 + upstream + function pointer calls using i64 => TypeError: cannot pass i64 to or from JS · Issue #9562 · emscripten-core/emscripten · GitHub,C++,https://github.com/emscripten-core/emscripten/issues/9562#issue-501403470,"Filesystem, Floating Point Values"," std::fopen, std::fseek, std::fclose",JS-called function return values used in indirect calls have incorrect type,Data Type Incompatibilities ,Legalization,Export original wasm functions along with Js-wrapped versions to prevent JS legalization issues
54376,"access("""", W_OK) crashes · Issue #9136 · emscripten-core/emscripten · GitHub",C,https://github.com/emscripten-core/emscripten/issues/9136#issue-475689133,Filesystem,std::fclose,Using 'access' system call with empty string throws null,Faulty Program Logic,,Add check for empty string to throw useful error message
